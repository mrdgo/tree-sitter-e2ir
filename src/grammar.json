{
  "name": "e2ir",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SYMBOL",
            "name": "global_variable_declaration"
          },
          {
            "type": "SYMBOL",
            "name": "function_declaration"
          }
        ]
      }
    },
    "global_variable_declaration": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": ".global"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "STRING",
          "value": ":"
        },
        {
          "type": "SYMBOL",
          "name": "type_name"
        }
      ]
    },
    "function_declaration": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": ".func"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": ":"
                },
                {
                  "type": "SYMBOL",
                  "name": "type_name"
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "parameter_declaration"
          }
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "local_variable_declaration"
          }
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "virtual_register_declaration"
          }
        },
        {
          "type": "STRING",
          "value": ".code"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "instruction"
          }
        }
      ]
    },
    "parameter_declaration": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": ".param"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "identifier"
          }
        },
        {
          "type": "STRING",
          "value": ":"
        },
        {
          "type": "SYMBOL",
          "name": "type_name"
        }
      ]
    },
    "local_variable_declaration": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": ".local"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "identifier"
          }
        },
        {
          "type": "STRING",
          "value": ":"
        },
        {
          "type": "SYMBOL",
          "name": "type_name"
        }
      ]
    },
    "virtual_register_declaration": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": ".virt"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "identifier"
          }
        },
        {
          "type": "STRING",
          "value": ":"
        },
        {
          "type": "SYMBOL",
          "name": "type_name"
        }
      ]
    },
    "type_name": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "primitive_type_name"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "REPEAT",
              "content": {
                "type": "SYMBOL",
                "name": "dimension"
              }
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "dimension": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "["
        },
        {
          "type": "SYMBOL",
          "name": "array_size"
        },
        {
          "type": "STRING",
          "value": "]"
        }
      ]
    },
    "primitive_type_name": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "int"
        },
        {
          "type": "STRING",
          "value": "real"
        },
        {
          "type": "STRING",
          "value": "bool"
        }
      ]
    },
    "instruction": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "nop"
        },
        {
          "type": "SYMBOL",
          "name": "mov"
        },
        {
          "type": "SYMBOL",
          "name": "phi"
        },
        {
          "type": "SYMBOL",
          "name": "arithmetic"
        },
        {
          "type": "SYMBOL",
          "name": "unconditional_jump"
        },
        {
          "type": "SYMBOL",
          "name": "conditional_jump"
        },
        {
          "type": "SYMBOL",
          "name": "call"
        },
        {
          "type": "SYMBOL",
          "name": "ret"
        },
        {
          "type": "SYMBOL",
          "name": "load"
        },
        {
          "type": "SYMBOL",
          "name": "store"
        },
        {
          "type": "SYMBOL",
          "name": "cast"
        },
        {
          "type": "SYMBOL",
          "name": "label_instr"
        }
      ]
    },
    "nop": {
      "type": "STRING",
      "value": "nop"
    },
    "mov": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "variable_operand"
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "STRING",
          "value": "mov"
        },
        {
          "type": "SYMBOL",
          "name": "operand"
        }
      ]
    },
    "phi": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "variable_operand"
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "STRING",
          "value": "phi"
        },
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "SYMBOL",
          "name": "operand"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "REPEAT",
              "content": {
                "type": "SEQ",
                "members": [
                  {
                    "type": "STRING",
                    "value": ","
                  },
                  {
                    "type": "SYMBOL",
                    "name": "operand"
                  }
                ]
              }
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "arithmetic": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "variable_operand"
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "add"
            },
            {
              "type": "STRING",
              "value": "sub"
            },
            {
              "type": "STRING",
              "value": "mul"
            },
            {
              "type": "STRING",
              "value": "div"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "operand"
        },
        {
          "type": "STRING",
          "value": ", "
        },
        {
          "type": "SYMBOL",
          "name": "operand"
        }
      ]
    },
    "unconditional_jump": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "jmp"
        },
        {
          "type": "SYMBOL",
          "name": "label"
        }
      ]
    },
    "conditional_jump": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "jeq"
            },
            {
              "type": "STRING",
              "value": "jne"
            },
            {
              "type": "STRING",
              "value": "jlt"
            },
            {
              "type": "STRING",
              "value": "jgt"
            },
            {
              "type": "STRING",
              "value": "jle"
            },
            {
              "type": "STRING",
              "value": "jge"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "operand"
        },
        {
          "type": "STRING",
          "value": ","
        },
        {
          "type": "SYMBOL",
          "name": "operand"
        },
        {
          "type": "STRING",
          "value": ","
        },
        {
          "type": "SYMBOL",
          "name": "label"
        }
      ]
    },
    "call": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "variable_operand"
                },
                {
                  "type": "STRING",
                  "value": "="
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "call"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "SYMBOL",
          "name": "operand"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "REPEAT",
              "content": {
                "type": "SEQ",
                "members": [
                  {
                    "type": "STRING",
                    "value": ","
                  },
                  {
                    "type": "SYMBOL",
                    "name": "operand"
                  }
                ]
              }
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "ret": {
      "type": "PREC_RIGHT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "ret"
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "operand"
              },
              {
                "type": "BLANK"
              }
            ]
          }
        ]
      }
    },
    "load": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "variable_operand"
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "STRING",
          "value": "load"
        },
        {
          "type": "SYMBOL",
          "name": "variable_operand"
        },
        {
          "type": "STRING",
          "value": "["
        },
        {
          "type": "SYMBOL",
          "name": "operand"
        },
        {
          "type": "STRING",
          "value": "]"
        }
      ]
    },
    "store": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "variable_operand"
        },
        {
          "type": "STRING",
          "value": "["
        },
        {
          "type": "SYMBOL",
          "name": "operand"
        },
        {
          "type": "STRING",
          "value": "]"
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "STRING",
          "value": "store"
        },
        {
          "type": "SYMBOL",
          "name": "operand"
        }
      ]
    },
    "cast": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "variable_operand"
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "i2r"
            },
            {
              "type": "STRING",
              "value": "r2i"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "operand"
        }
      ]
    },
    "label": {
      "type": "PATTERN",
      "value": "L[0-9]+"
    },
    "label_instr": {
      "type": "PATTERN",
      "value": "L[0-9]+:"
    },
    "operand": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "variable_operand"
        },
        {
          "type": "SYMBOL",
          "name": "integer_constant"
        },
        {
          "type": "SYMBOL",
          "name": "real_constant"
        }
      ]
    },
    "variable_operand": {
      "type": "SYMBOL",
      "name": "identifier"
    },
    "identifier": {
      "type": "PATTERN",
      "value": "[a-zA-Z_%]+[a-zA-Z0-9_%\\$]*"
    },
    "integer_constant": {
      "type": "PATTERN",
      "value": "\\$\\-?[0-9]+"
    },
    "real_constant": {
      "type": "PATTERN",
      "value": "\\$\\-?[0-9]+\\.[0-9]*"
    },
    "array_size": {
      "type": "PATTERN",
      "value": "[0-9]+"
    },
    "comment": {
      "type": "TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "#"
          },
          {
            "type": "PATTERN",
            "value": ".*"
          }
        ]
      }
    },
    "line_continuation": {
      "type": "TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "\\"
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SEQ",
                "members": [
                  {
                    "type": "CHOICE",
                    "members": [
                      {
                        "type": "STRING",
                        "value": "\r"
                      },
                      {
                        "type": "BLANK"
                      }
                    ]
                  },
                  {
                    "type": "STRING",
                    "value": "\n"
                  }
                ]
              },
              {
                "type": "STRING",
                "value": "\u0000"
              }
            ]
          }
        ]
      }
    }
  },
  "extras": [
    {
      "type": "SYMBOL",
      "name": "comment"
    },
    {
      "type": "PATTERN",
      "value": "[\\s\\f\\uFEFF\\u2060\\u200B]|\\r?\\n"
    },
    {
      "type": "SYMBOL",
      "name": "line_continuation"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}

